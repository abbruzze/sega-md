package ucesoft.smd.controller

import ucesoft.smd.controller.ControllerDevice.Lightgun
import ucesoft.smd.{Display, VDP}

import java.awt.{Point, Toolkit}
import java.awt.event.{MouseEvent, MouseListener}
import javax.swing.SwingUtilities

object LightgunController:
  inline val DEVICE_PROP_VALUE = "lightgun"
/**
 * @author Alessandro Abbruzzetti
 *         Created on 08/05/2024 15:25  
 */
class LightgunController(override val index:Int, vdp:VDP, display:Display) extends Controller with MouseListener with VDP.LightgunProvider:
  override val device: ControllerDevice = Lightgun

  // thanks to genplus-gx project
  private final val MENACER_HCOUNTER_32 = Array(
    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
    0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,
    0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F,
    0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,
    0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F,
    0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F,
    0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,
    0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F,
    0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F,
    0x90, 0x91, 0x92, 0x93,
                                                          0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF,
    0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF
  )
  private final val MENACER_HCOUNTER_40 = Array(
    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
    0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,
    0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F,
    0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F,
    0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F,
    0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F,
    0x60, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F,
    0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0x7B, 0x7C, 0x7D, 0x7E, 0x7F,
    0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F,
    0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0x9B, 0x9C, 0x9D, 0x9E, 0x9F,
    0xA0, 0xA1, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6, 0xA7, 0xA8, 0xA9, 0xAA, 0xAB, 0xAC, 0xAD, 0xAE, 0xAF,
    0xB0, 0xB1, 0xB2, 0xB3, 0xB4, 0xB5, 0xB6,
                                              0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED,
    0xEE, 0xEF, 0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD,
    0xFE, 0xFF
  )

  private inline val MENACER_START  = 0x08
  private inline val MENACER_A      = 0x02
  private inline val MENACER_B      = 0x01
  private inline val MENACER_C      = 0x04

  private val emptyCursor = {
    val cursor = new java.awt.image.BufferedImage(16, 16, java.awt.image.BufferedImage.TYPE_INT_ARGB)
    Toolkit.getDefaultToolkit.createCustomCursor(cursor, new Point(0, 0), "null")
  }

  private var data = 0
  private var x_offset = 0

  override def setGameCRC32(crc32: Long): Unit =
    x_offset = crc32 match
      case 0x936b85f7 => 0x52 // Menacer 6-Game
      case 0xa1264f17 => 0x84 // T2 - The Arcade Game
      case 0x3575a030 => 0x44 // Body Count
      case _ => 0

  override def reset(): Unit =
    data = 0

  def mouseEnabled(enabled: Boolean): Unit =
    val window = SwingUtilities.getWindowAncestor(display)
    if enabled then
      //window.setCursor(emptyCursor)
      window.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR))
      display.addMouseListener(this)
      vdp.enableLightgun((control & 0x80) == 0x80,this)
    else
      window.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR))
      display.removeMouseListener(this)
      vdp.enableLightgun(false,this)

  override def disconnect(): Unit =
    mouseEnabled(false)
    vdp.enableLightgun(false,this)

  override def readData(): Int = data | 0x40

  override def writeControl(value: Int): Unit =
    super.writeControl(value)
    vdp.enableLightgun((value & 0x80) == 0x80,this)

  override def writeData(value: Int): Unit = {}

  override def getHCounter(h40:Boolean,x: Int): Int =
    val hc = if h40 then
      MENACER_HCOUNTER_40((((x * 290) / (320 * 2)) + x_offset) % 210)
    else
      MENACER_HCOUNTER_32((x / 2 + x_offset) % 171)

    hc | 0x10000

  override def mouseClicked(e: MouseEvent): Unit = {}

  override def mousePressed(e: MouseEvent): Unit =
    if SwingUtilities.isRightMouseButton(e) then
      data |= MENACER_START
    else if SwingUtilities.isMiddleMouseButton(e) then
      data |= MENACER_B
    else
      data |= MENACER_A

  override def mouseReleased(e: MouseEvent): Unit =
    if SwingUtilities.isRightMouseButton(e) then
      data &= ~MENACER_START
    else if SwingUtilities.isMiddleMouseButton(e) then
      data &= ~MENACER_B
    else
      data &= ~MENACER_A

  override def mouseEntered(e: MouseEvent): Unit = {}

  override def mouseExited(e: MouseEvent): Unit = {}